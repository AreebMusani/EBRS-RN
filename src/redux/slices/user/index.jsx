import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  user: "",
  token: ""
};

// Create a slice with a name and an initial state
export const userSlice = createSlice({
  name: "user", // name for the slice
  initialState, // initial state for the slice

  // Define reducers that can update the state
  reducers: {
    setUser: (state, action) => {
      state.user = action.payload.user;
      state.token = action.payload.token;
    },
    removeLoginData: (state) => {
      state.token = null;
      state.user = null;
    },

    addNewField: (state,action) => {
      state.user = {...state.user, ...action.payload}
    }
  },

  // Define extra reducers that listen to actions from userActions.js
  // and update the state
  // extraReducers: (builder) => {
  //   builder.addCase(saveUserName.fulfilled, (state, action) => {
  //     state.name = action.payload;
  //   });
  //   builder.addCase(getUserInfo.fulfilled, (state, action) => {
  //     state.userInfo = action.payload;
  //   });
  //   builder.addCase(deleteUser.fulfilled, (state, action) => {
  //     state.name = "";
  //     state.userInfo = {};
  //   });
  // },
});

// Export the action creators generated by createSlice
export const { setUser, removeLoginData, addNewField } = userSlice.actions;

// Export the reducer generated by createSlice
export default userSlice.reducer;


export const getUserData = (state) => state.user.user;
export const getToken = (state) => state.user.token;